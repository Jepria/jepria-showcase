<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- 
    Сборка общего продукта (lib/*.war) на основе компонентов (client-react/build/*.*, service-rest/target/*.war, gwt/lib/*-gwt.war).

    Наличие либо отсутствие в проекте компонентов пока что устанавливается вручную
    комментированием xml-элементов (ресурсов) с текстовыми метками "build:gwt",
    "build:service-rest", "build:client-react" в настройках maven-war-plugin.
  -->

  <artifactId>jepriashowcase-webapp</artifactId>
  <version>12.0.0</version>
  <packaging>war</packaging>

  <parent>
    <!-- Эти параметры должны в точности совпадать с аналогичными параметрами в родительском pom.xml -->
    <groupId>org.jepria.jepriashowcase</groupId>
    <artifactId>JepRiaShowcase</artifactId>
    <version>12.0.0</version>
  </parent>

  <build>
    <finalName>${project.build.finalName}</finalName>

    <plugins>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.2.2</version>
        <configuration>
          <webResources>
            
            <!-- build:gwt -->
            <resource>
              <directory>${project.build.directory}/temp-war-gwt</directory>
              <excludes>
                <exclude>WEB-INF/web.xml</exclude>
                <exclude>actuator/*</exclude>
              </excludes>
            </resource>
            
            <!-- build:service-rest -->  
            <resource>
              <directory>${project.build.directory}/temp-war-service-rest</directory>
              <excludes>
                <exclude>WEB-INF/web.xml</exclude>
              </excludes>
            </resource>
            
            <!-- build:client-react -->
            <resource>
              <directory>${project.parent.basedir}/client-react/build</directory>
              <targetPath>react</targetPath>
            </resource>

          </webResources>
          <packagingExcludes>WEB-INF/classes/</packagingExcludes>

          <archive>
            <addMavenDescriptor>false</addMavenDescriptor>
            <manifestEntries>
              <Built-By>developer</Built-By>
            </manifestEntries>
          </archive>

        </configuration>
      </plugin>

      <plugin>
        <!-- unpack gwt.war and service-rest.war to temp directories to further merge them into a single war -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>truezip-maven-plugin</artifactId>
        <version>1.2</version>
        <executions>
          
          <!-- build:gwt -->
          <execution>
            <id>unpack-nested-project-gwt</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <filesets>
                <fileset>
                  <directory>${project.parent.basedir}/gwt/lib/${project.build.gwt.productName}.war</directory>
                  <outputDirectory>${project.build.directory}/temp-war-gwt</outputDirectory>
                </fileset>
              </filesets>
            </configuration>
          </execution>

          <!-- build:service-rest -->
          <execution>
            <id>unpack-nested-project-service-rest</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <filesets>
                <fileset>
                  <directory>${project.parent.basedir}/service-rest/target/${project.build.serviceRest.productName}.war</directory>
                  <outputDirectory>${project.build.directory}/temp-war-service-rest</outputDirectory>
                </fileset>
              </filesets>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.jepria.tools.mavenplugin</groupId>
        <artifactId>collisioncheck-maven-plugin</artifactId>
        <version>1.0.0</version>
        <executions>

          <!-- build:gwt && build:service-rest -->
          <execution>
            <id>build_gwt__check-collisions,build_service-rest__check-collisions</id>
            <phase>prepare-package</phase>
            <configuration>
              <warGwtPath>${project.parent.basedir}/gwt/lib/${project.build.gwt.productName}.war</warGwtPath>
              <warServiceRestPath>${project.parent.basedir}/service-rest/target/${project.build.serviceRest.productName}.war</warServiceRestPath>
              <strict>true</strict>
            </configuration>
            <goals>
              <goal>check-collision</goal>
            </goals>
          </execution>

        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-project-artifact</id>
            <phase>package</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.parent.basedir}/lib</outputDirectory>
              <resources>
                <resource>
                  <directory>${project.build.directory}</directory>
                  <includes>
                    <include>${project.build.finalName}.war</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!--
        Конфигурация может быть задействована при необходимости отдельного деплоя модуля
        gwt на Tomcat.
      -->
      <!--
      <plugin>
        <groupId>org.apache.tomcat.maven</groupId>
        <artifactId>tomcat7-maven-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <update>true</update>
          <url>http://localhost:8080/manager/text</url>
          <username>username</username>
          <password>password</password>
          <path>/${project.build.finalName}</path>
          <failOnError>true</failOnError>
        </configuration>
      </plugin>
      -->

    </plugins>
  </build>

</project>
